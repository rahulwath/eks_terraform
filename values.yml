---
prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/certificate-arn: <ARN OF YOUR CERTIFICATE>     #Create a certificate in ACM and put Certificate ARN 
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
    hosts:
      - prometheus.example.com
    paths:
      - /
      
grafana:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/certificate-arn: <ARN OF YOUR CERTIFICATE>     #Create a certificate in ACM and put Certificate ARN 
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
    hosts:
      - grafana.example.com
    path: /

# Configure Prometheus
prometheus:
  prometheus:
    retention: 7d
    scrape_interval: 1m

# # Configure Alertmanager
# alertmanager:
#   alertmanager:
#     config:
#       global:
#         slack_api_url: "https://your-slack-webhook-url"
#       route:
#         receiver: "slack-notifications"

# Configure Grafana
# grafana:
#   grafana:
#     adminPassword: "your-admin-password"
#     config:
#       auth:
#         github:
#           enabled: true
#           client_id: "your-github-client-id"
#           client_secret: "your-github-client-secret"

# Configure DNS
dns:
  prometheus:
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "prometheus.example.com"
  grafana:
    enabled: true
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "grafana.example.com"
